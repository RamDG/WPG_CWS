%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                         %
%                       NAO robot kinematic model                         %
%                              with masses                                %
%                                                                         %
%                 Model from  Louise Poubel  Thesis  2013                 %
%                                                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Parametrized w.r.t. the RFoot
%
% NAO H25 V4.0
%
% Parameters from http://www.aldebaran-robotics.com/documentation/family/nao_h25/index_h25.html


% % Lengths from NAO documentation
% FootHeight = 45.19; % V3.2 = 45.11
% TibiaLength = 102.9; % V3.2 = V3.3
% ThighLength = 100; % V3.2 = V3.3
% HipOffsetZ = 85; % V3.2 = V3.3
% HipOffsetY = 50; % V3.2 = V3.3
% ShoulderOffsetZ = 100; % V3.2 = V3.3
% ShoulderOffsetY = 98; % V3.2 = V3.3
% UpperArmLength = 105; % V3.2 = 90
% ElbowOffsetY = 15;% V3.2 = 0
% LowerArmLength = 55.95; % V3.2 = 50.55
% HandOffsetX = 57.75; % V3.2 = 58
% HandOffsetZ = 12.31; 
% NeckOffsetZ = 126.5; % V3.2 = V3.3

% Lengths from NAO documentation
FootHeight = 45.19*10^-3; % V3.2 = 45.11
TibiaLength = 102.9*10^-3; % V3.2 = V3.3
ThighLength = 100*10^-3; % V3.2 = V3.3
HipOffsetZ = 85*10^-3; % V3.2 = V3.3
HipOffsetY = 50*10^-3; % V3.2 = V3.3
ShoulderOffsetZ = 100*10^-3; % V3.2 = V3.3
ShoulderOffsetY = 98*10^-3; % V3.2 = V3.3
UpperArmLength = 105*10^-3; % V3.2 = 90
ElbowOffsetY = 15*10^-3;% V3.2 = 0
LowerArmLength = 55.95*10^-3; % V3.2 = 50.55
HandOffsetX = 57.75*10^-3; % V3.2 = 58
HandOffsetZ = 12.31*10^-3; 
NeckOffsetZ = 126.5*10^-3; % V3.2 = V3.3
% M-DH parameters

a = [0,...
    1,...
    2,...
    3,...
    4,...
    5,...
    6,...
    7,...
    8,...
    9,...
    10,...
    11,...
    12,...
    13,...
    7,...
    15,...
    16,...
    17,...
    18,...
    19,...
    7,...
    21,...
    22,...
    23,...
    24,...
    25,...
    7,...
    27];
sigma = [0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    2,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    2,...
    0,...
    0,...
    0,...
    0,...
    0,...
    2,...
    0,...
    0,...
    0,...
    0,...
    0,...
    2,...
    0,...
    0];
gamma = [-pi/2,...
    0,...
    0,...
    0,...
    0,...
    0,...
    -pi/2,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0];
b = [FootHeight,...
    0,...
    0,...
    0,...
    0,...
    0,...
    (HipOffsetY^2+HipOffsetY^2)^(1/2),...
    -(HipOffsetZ-HipOffsetY),...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    ShoulderOffsetZ,...
    0,...
    0,...
    0,...
    0,...
    HandOffsetX,...
    ShoulderOffsetZ,...
    0,...
    0,...
    0,...
    0,...
    HandOffsetX,...
    0,...
    0];
alpha = [-pi/2,...
    pi/2,...
    0,...
    0,...
    -pi/2,...
    -pi/2,...
    -pi/4,...
    3*pi/4,...
    pi/2,...
    pi/2,...
    0,...
    0,...
    -pi/2,...
    pi/2,...
    -pi/2,...
    pi/2,...
    pi/2,...
    -pi/2,...
    pi/2,...
    -pi/2,...
    -pi/2,...
    pi/2,...
    pi/2,...
    -pi/2,...
    pi/2,...
    -pi/2,...
    0,...
    -pi/2];
d = [0,...
    0,...
    TibiaLength,...
    ThighLength,...
    0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    -ThighLength,...
    -TibiaLength,...
    0,...
    0,...
    0,...
    0,...
    -ElbowOffsetY,...
    0,...
    0,...
    0,...
    0,...
    0,...
    ElbowOffsetY,...
    0,...
    0,...
    0,...
    0,...
    0];
theta = [-pi/2-q(1),...
    -q(2),...
    -q(3),...
    -q(4),...
    -pi/4-q(5),...
    q(6),...
    0,...
    pi/2-q(6),...
    -pi/4+q(7),...
    q(8),...
    q(9),...
    q(10),...
    pi/2+q(11),...
    pi/2,...
    q(12),...
    pi/2+q(13),...
    q(14),...
    q(15),...
    q(16),...
    -pi/2,...
    q(17),...
    pi/2+q(18),...
    q(19),...
    q(20),...
    q(21),...
    -pi/2,...
    q(22),...
    -pi/2+q(23)];
r = [0,...
    0,...
    0,...
    0,...
    0,...
    0,...
    HipOffsetZ-HipOffsetY,...
    (HipOffsetY^2+HipOffsetY^2)^(1/2),...
    0,...
    0,...
    0,...
    0,...
    0,...
    -FootHeight,...
    -ShoulderOffsetY,...
    0,...
    UpperArmLength,...
    0,...
    LowerArmLength,...
    -HandOffsetZ,...
    ShoulderOffsetY,...
    0,...
    UpperArmLength,...
    0,...
    LowerArmLength,...
    -HandOffsetZ,...
    NeckOffsetZ,...
    0];

% w.r.t 0
for j = 1:length(a);
    T(:,:,j) = dgmgenstructure(a,gamma,b,alpha,d,theta,r,0,j);
end


% Masses -- order from LFoot
% 
% % Each mass is expressed on its DOF's frame, with Aldebaran's orientation
% % Body: V3.3, Head: V4.0 -- Totally different from V3.2
% m = [0.16184,... % LAnkleRoll
%     0.13416,... % LAnklePitch
%     0.29142,... % LKneePitch    
%     0.38968,... % LHipPitch !!!!!!!!!!!!!!!!!! The real robot says 0.39798 but the documentation says 0.39421    
%     0.13053,... % LHipRoll
%     0.06981,... % LHipYawPitch    
%     1.04956,... % Torso    
%     0.07118,... % RHipYawPitch
%     0.13053,... % RHipRoll    
%     0.38976,... % RHipPitch !!!!!!!!!!!!!!!!!! The real robot says 0.39798 but the documentation says 0.39421
%     0.29163,... % RKneePitch     
%     0.13415,... % RAnklePitch     
%     0.16171,... % RAnkleRoll
%     0,...
%     0.07504,... % RShoulderPitch
%     0.15794,... % RShoulderRoll
%     0.06483,... % RElbowYaw
%     0.07778,... % RElbowRoll
%     0.18533,... % RWristYaw
%     0,...
%     0.07504,... % LShoulderPitch
%     0.15777,... % LShoulderRoll
%     0.06483,... % LElbowYaw
%     0.07761,... % LElbowRoll
%     0.18533,... % LWristYaw
%     0,...
%     0.06442,... % HeadYaw
%     0.60533];   % HeadPitch
% M = sum(m);
% 
% % Each mass in its own frame
% % SX, SY and SZ, but expressed in Aldebaran's frames
% c = [   +0.02542,   +0.00330,   -0.03239;...    % LAnkleRoll
%         +0.00045,   +0.00029,   +0.00685;...    % LAnklePitch
%         +0.00453,   +0.00225,   -0.04936;...    % LKneePitch
%         +0.00138,   +0.00221,   -0.05373;...    % LHipPitch
%         -0.01549,   +0.00029,   -0.00515;...    % LHipRoll
%         -0.00781,   -0.01114,   +0.02661;...    % LHipYawPitch
%         -0.00413,   +0.00009,   +0.04342;...    % Torso
%         -0.00766,   +0.01200,   +0.02716;...    % RHipYawPitch
%         -0.01549,   -0.00029,   -0.00516;...    % RHipRoll
%         +0.00139,   -0.00225,   -0.05374;...    % RHipPitch
%         +0.00394,   -0.00221,   -0.04938;...    % RKneePitch
%         +0.00045,   -0.00030,   +0.00684;...    % RAnklePitch
%         +0.02540,   -0.00332,   -0.03239;...    % RAnkleRoll
%         NaN,        NaN,        NaN;...
%         -0.00165,   +0.02663,   +0.00014;...    % RShoulderPitch
%         +0.02429,   -0.00952,   +0.00320;...    % RShoulderRoll
%         -0.02744,   +0.00000,   -0.00014;...    % RElbowYaw
%         +0.02552,   -0.00281,   +0.00090;...    % RElbowRoll
%         +0.03434,   -0.00088,   +0.00308;...    % RWristYaw
%         NaN,        NaN,        NaN;...
%         -0.00165,   -0.02663,   +0.00014;...    % LShoulderPitch
%         +0.02455,   +0.00563,   +0.00330;...    % LShoulderRoll
%         -0.02744,   -0.00000,   -0.00014;...    % LElbowYaw
%         +0.02556,   +0.00281,   +0.00076;...    % LElbowRoll
%         +0.03434,   -0.00088,   +0.00308;...    % LWristYaw
%         NaN,        NaN,        NaN;...
%         -0.00001,   +0.00014,   -0.02742;...    % HeadYaw
%         -0.00112,   +0.00003,   +0.05258];      % HeadPitch
% 
% c = c*1000;
%     
% 
% % LFoot's mass is on frame zero.
% c_0_0 = [c(1,1),c(1,2),c(1,3)+FootHeight];                   m0 =m(1);
% % Change LLeg's masses to previous frame
% c(1,:) = c(2,:);                                m(1) = m(2);
% c(2,:) = [c(3,1),c(3,2),c(3,3)+TibiaLength];    m(2) = m(3);
% c(3,:) = [c(4,1),c(4,2),c(4,3)+ThighLength];    m(3) = m(4);
% c(4,:) = c(5,:);                                m(4) = m(5);
% c(5,:) = c(6,:);                                m(5) = m(6);
% c(6,:) = [NaN,NaN,NaN];                         m(6) = 0;
% 



% % Get the position of each CoM w.r.t zero
% 
% % Find transforms to rotate the masses
% % The transforms are the rotation which brings the zero position frames 
% % (all qs = 0) to Aldebaran's
% q0 = zeros(23);
% theta0 = [-pi/2-q0(1),...
%     -q0(2),...
%     -q0(3),...
%     -q0(4),...
%     -pi/4-q0(5),...
%     q0(6),...
%     0,...
%     pi/2-q0(6),...
%     -pi/4+q0(7),...
%     q0(8),...
%     q0(9),...
%     q0(10),...
%     pi/2+q0(11),...
%     pi/2,...
%     q0(12),...
%     pi/2+q0(13),...
%     q0(14),...
%     q0(15),...
%     q0(16),...
%     -pi/2,...
%     q0(17),...
%     pi/2+q0(18),...
%     q0(19),...
%     q0(20),...
%     q0(21),...
%     -pi/2,...
%     q0(22),...
%     -pi/2+q0(23)];
% 
% % all qs = 0
% for j = 1:length(a);
%     T_q0(:,:,j) = dgmgenstructure(a,gamma,b,alpha,d,theta0,r,0,j);
% end
% 
% 
% % Finally, find all of them w.r.t. 0
% CoM = (m0/M)*c_0_0;
% for j = 1:length(m)
%     RotateAltoMine = inv(T_q0(1:3,1:3,j));
%     RotateAltoMine = [RotateAltoMine,[0;0;0];0,0,0,1];
%     
%     % Vector of CoM coordinates w.r.t. own frame
%     if c(1) ~= NaN
%         S = RotateAltoMine*[transpose(c(j,:));1];
%         % First moments
%         MX(j) = m(j)*S(1);
%         MY(j) = m(j)*S(2);
%         MZ(j) = m(j)*S(3);
%         % w.r.t. zero
%         A = T(:,:,j)*S;
%         c_0(j,1:3) = transpose(A(1:3));
%     end
% 
%     if m(j) ~= 0
%         CoM=CoM+(m(j)/M)*c_0(j,:);
%     end
% 
% end
% 
% 
